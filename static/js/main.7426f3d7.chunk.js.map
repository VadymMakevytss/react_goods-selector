{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","clearText","setState","prevState","splice","this","length","slice","join","good","includes","filter","selectedGood","className","setTitleList","isSelectedGoodsLength","Button","onClick","ListGroup","as","map","Item","key","active","isGodSelected","variant","removeGood","addGood","Component","ReactDOM","render","document","getElementById"],"mappings":"wSAKMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAoBEC,UAAY,WACV,EAAKC,UACH,SAAAC,GAAS,OAAIA,EAAUH,cAAcI,OAAO,OAtBlD,kDAKE,WACE,IAAQJ,EAAkBK,KAAKN,MAAvBC,cAGR,OAFmBA,EAAcM,QAG/B,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUN,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcO,MAAM,GAAI,GAAGC,KAAK,MAA1C,2BACIR,EAAcO,OAAO,GADzB,oBAfR,mCA0BE,WACE,QAAIF,KAAKN,MAAMC,cAAcM,SA3BjC,2BAkCE,SAAcG,GACZ,OAAOJ,KAAKN,MAAMC,cAAcU,SAASD,KAnC7C,qBAsCE,SAAQA,GACNJ,KAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAc,GAAD,mBAAMG,EAAUH,eAAhB,CAA+BS,UAxClD,wBA4CE,SAAWA,GACTJ,KAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAeG,EAAUH,cAAcW,QACrC,SAAAC,GAAY,OAAIA,IAAiBH,WA/CzC,oBAoDE,WAAU,IAAD,OACP,OACE,yBAAKI,UAAU,YACb,6BACE,wBAAIA,UAAU,eAAd,iBAEG,IACAR,KAAKS,eACL,IACCT,KAAKU,yBACP,kBAACC,EAAA,EAAD,CACEC,QAASZ,KAAKJ,WADhB,OAUJ,kBAACiB,EAAA,EAAD,CAAWC,GAAG,KAAKN,UAAU,eAC1BhB,EAAgBuB,KAAI,SAAAX,GAAI,OACvB,kBAACS,EAAA,EAAUG,KAAX,CACEC,IAAKb,EACLc,OAAQ,EAAKC,cAAcf,GAC3BU,GAAG,KACHN,UAAU,cAERJ,EACF,kBAACO,EAAA,EAAD,CACES,QAAS,EAAKD,cAAcf,GAAQ,SAAW,UAC/CI,UAAU,iBACVI,QAAS,EAAKO,cAAcf,GACxB,kBAAM,EAAKiB,WAAWjB,IACtB,kBAAM,EAAKkB,QAAQlB,KAGtB,EAAKe,cAAcf,GAAQ,SAAW,iBAzFvD,GAAyBmB,aCdzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7426f3d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup, Button } from 'react-bootstrap';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  setTitleList() {\n    const { selectedGoods } = this.state;\n    const listLength = selectedGoods.length;\n\n    switch (listLength) {\n      case 0:\n        return 'NO GOODS SELECTED';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and\n          ${selectedGoods.slice(-1)} are selected`;\n    }\n  }\n\n  clearText = () => {\n    this.setState(\n      prevState => prevState.selectedGoods.splice(0),\n    );\n  }\n\n  isSelectedGoodsLength() {\n    if (this.state.selectedGoods.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isGodSelected(good) {\n    return this.state.selectedGoods.includes(good);\n  }\n\n  addGood(good) {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  }\n\n  removeGood(good) {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(\n        selectedGood => selectedGood !== good,\n      ),\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App list\">\n        <div>\n          <h1 className=\"list__title\">\n            Selected good:\n            {' '}\n            {this.setTitleList()}\n            {' '}\n            { this.isSelectedGoodsLength() && (\n            <Button\n              onClick={this.clearText}\n            >\n              X\n            </Button>\n            )\n            }\n          </h1>\n        </div>\n\n        <ListGroup as=\"ul\" className=\"list__group\">\n          {goodsFromServer.map(good => (\n            <ListGroup.Item\n              key={good}\n              active={this.isGodSelected(good)}\n              as=\"li\"\n              className=\"list__item\"\n            >\n              { good }\n              <Button\n                variant={this.isGodSelected(good) ? 'danger' : 'success'}\n                className=\"list__selector\"\n                onClick={this.isGodSelected(good)\n                  ? () => this.removeGood(good)\n                  : () => this.addGood(good)\n                }\n              >\n                {this.isGodSelected(good) ? 'Remove' : 'Add'}\n              </Button>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}